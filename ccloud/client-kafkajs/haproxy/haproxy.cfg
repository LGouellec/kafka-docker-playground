global
    log stdout    local0
    log stdout    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL). This list is from:
    #   https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    # An alternative list with additional directives can be obtained from
    #   https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

defaults
    log global
    mode    http
    option  tcplog
    option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend kafka
    mode tcp
    bind *:9092
    bind *:443
    log global

    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }
 
    # define acl depending certificate name
    acl is_bootstrap req.ssl_sni -i pkc-r5djp.europe-west1.gcp.confluent.cloud
    acl is_kafka0 req.ssl_sni -i b0-pkc-r5djp.europe-west1.gcp.confluent.cloud
    acl is_kafka1 req.ssl_sni -i b1-pkc-r5djp.europe-west1.gcp.confluent.cloud
    acl is_kafka2 req.ssl_sni -i b2-pkc-r5djp.europe-west1.gcp.confluent.cloud
    acl is_kafka3 req.ssl_sni -i b3-pkc-r5djp.europe-west1.gcp.confluent.cloud
 
    # depending name rule to route to specified backend
    use_backend bootstrap if is_bootstrap
    use_backend kafka0 if is_kafka0
    use_backend kafka1 if is_kafka1
    use_backend kafka2 if is_kafka2
    use_backend kafka3 if is_kafka3
 
# backend definitions
backend bootstrap
    mode tcp
    server bootstrap pkc-r5djp.europe-west1.gcp.confluent.cloud:9092 check
backend kafka0
    mode tcp
    server kafka0 b0-pkc-r5djp.europe-west1.gcp.confluent.cloud:9092 check
backend kafka1
    mode tcp
    server kafka1 b1-pkc-r5djp.europe-west1.gcp.confluent.cloud:9092 check
backend kafka2
    mode tcp
    server kafka2 b2-pkc-r5djp.europe-west1.gcp.confluent.cloud:9092 check
backend kafka3
    mode tcp
    server kafka3 b3-pkc-r5djp.europe-west1.gcp.confluent.cloud:9092 check
 
