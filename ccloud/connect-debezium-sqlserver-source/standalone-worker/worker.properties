bootstrap.servers=${file:/data:bootstrap.servers}
client.id=connect-adminclient-producer
config.providers.file.class=org.apache.kafka.common.config.provider.FileConfigProvider
config.providers=file
config.storage.replication.factor=3
config.storage.topic=connect-configs
connector.client.config.override.policy=All
consumer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
consumer.sasl.mechanism=PLAIN
consumer.security.protocol=SASL_SSL
group.id=connect
internal.key.converter.schemas.enable=false
internal.key.converter=org.apache.kafka.connect.json.JsonConverter
internal.value.converter.schemas.enable=false
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
key.converter=org.apache.kafka.connect.storage.StringConverter
log4j.appender.stdout.layout.conversionpattern=[%d] %p %X{connector.context}%m (%c:%L)%n
log4j.loggers=org.reflections=ERROR
log4j.root.loglevel=INFO
offset.storage.file.filename=/tmp/offset.txt
offset.storage.replication.factor=3
offset.storage.topic=connect-offsets
plugin.path=/usr/share/confluent-hub-components/
producer.client.id=connect-worker-producer
producer.interceptor.classes=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
producer.sasl.mechanism=PLAIN
producer.security.protocol=SASL_SSL
replication.factor=3
rest.advertised.host.name=connect
rest.port=8083
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${file:/data:sasl.username}" password="${file:/data:sasl.password}";
sasl.mechanism=PLAIN
security.protocol=SASL_SSL
ssl.endpoint.identification.algorithm=HTTPS
status.storage.replication.factor=3
status.storage.topic=connect-status
topic.creation.enable=true
value.converter.basic.auth.credentials.source=USER_INFO
value.converter.schema.registry.basic.auth.user.info=${file:/data:schema.registry.basic.auth.user.info}
value.converter.schema.registry.url=${file:/data:schema.registry.url}
value.converter.schemas.enable=true
value.converter=io.confluent.connect.avro.AvroConverter